INSTALL

==================
Linux with apt-get
------------------

This is the recommended way of installing Envaya, which will install 
any required dependencies. The linux setup scripts are tested on 
Ubuntu 10.04, but may work on other Linux distributions with apt-get.

The steps below assume that you are installing Envaya in a development 
environment. (For production server installation, see the section 
"Deploying releases to a production server")

# step 0: copy source code into a world-readable directory, e.g. /var/www/envaya
# if you don't already have the source code on your computer, you can do:
apt-get -y install git-core 
git clone --recursive git@github.com:youngj/Envaya.git /var/www/envaya

# The following commands should be run from a command prompt in the root
# directory of the Envaya source code.

# step 0.5: configure your APT sources 
# warning: this will modify your /etc/apt/sources.list file.
./scripts/setup/sources.sh

# step 1: install prerequisites (php, php extensions, wget, rsync, etc.)
./scripts/setup/prereqs.sh

# step 1.5: If you don't already have mysql installed, install it.
# warning: if mysql is already installed, this script will reset
# the mysql root password to the empty string (should fix this...)
./scripts/setup/mysql.sh

# step 2: create your local config file (config/local.php)
php scripts/install_settings.php

# edit config/local.php in a text editor:
#    * set admin_email to your own email address
#    * set your desired database settings
#    * override any other settings from config/default.php as necessary

# step 3: create empty database and default user 
php scripts/db_setup.php | mysql -u root -p

# step 4: install database tables and create directory for storing data on filesystem
php scripts/install_tables.php
php scripts/install_dataroot.php

# step 5: create initial users 
# (required for selenium tests, but should not be used in production)    
# creates admin username:testadmin pw:testtest
# creates organization username:testorg pw:testtest
# creates organization username:envaya pw:testtest
php scripts/install_test_data.php

# step 6: make compressed CSS and JS files, etc.
php make.php

# step 7: install sphinx (full text search)
./scripts/setup/sphinx.sh

# step 8: start envaya server processes
php runserver.php

# Leave runserver.php running in a command prompt, then open Envaya's home page in a browser. 
# (runserver.php will print out the URL of Envaya's home page.) 
# Things should basically work.

# optional: install dependencies for selenium tests and other development tools
./scripts/setup/dev.sh

# optional: install some extra programs 
# (may take a long time; most Envaya services will work without this):
./scripts/setup/extras.sh

# if your server doesn't already have a GUI, you may need this:
apt-get install x-window-system-core gnome-core gdm firefox
# then, reboot into GUI

===================
Manual Installation
-------------------

Envaya can also be set up on Windows or Mac, although there are currently no
scripts for installing the prerequisites / services / configuration files. 
However, see the next section for more detailed instructions for Windows.

Envaya requires the following prerequisites:

PHP 5.3 or higher, with php-cgi and php-cli
PHP extensions:
    curl
    gd
    json
    mbstring
    mcrypt
    memcache
    PDO
    pdo_mysql
Mysql

Envaya does not require a separate web server for development, since it 
comes with its own PHP development web server, but you can use Apache or Nginx
instead if you like.

To use Apache (with mod_php) as the web server, set DocumentRoot to the full
path to the www/ directory inside this source tree (e.g. C:/path/to/envaya/www),
and make sure that mod_rewrite is enabled.

To use Nginx (with php-fastcgi) as the webserver, see what scripts/setup/nginx.sh
does, and do something like that.

====================================================================
Manual installation for development environment with WAMP on Windows
--------------------------------------------------------------------

# install wampserver: http://www.wampserver.com/en/ (directions assume install dir is c:\wamp)

# install java jdk 6: http://www.oracle.com/technetwork/java/javase/downloads/index.html

# install cygwin: http://cygwin.com/install.html (directions assume install dir is c:\cygwin)
# install cygwin packages: rsync, openssh, mcrypt, git

# add c:\cygwin\bin;C:\wamp\bin\php\php5.3.0;C:\wamp\bin\mysql\mysql5.1.36\bin to PATH

# create a ssh keypair for your computer
# run cygwin shell as administrator
ssh-keygen
cp .ssh/id_rsa.pub .
notepad id_rsa.pub
# (copy this public key to github or wherever you need it)

# download envaya code to c:/wamp/www/envaya, e.g.:
cd c:\wamp\www\
git clone --recursive git@github.com:youngj/Envaya.git envaya

# install memcache library from http://downloads.php.net/pierre/php_memcache-cvs-20090703-5.3-VC6-x86.zip
# copy dll to php extension dir: C:\wamp\bin\php\php5.3.0\ext

# edit C:\wamp\bin\php\php5.3.0\php.ini, and add:
extension=php_memcache.dll
extension=php_curl.dll
extension=php_gd2.dll
extension=php_mbstring.dll
extension=php_pdo_mysql.dll
extension=php_sockets.dll
variables_order="GPCSE"

# from PEAR directory C:\wamp\bin\php\php5.3.0\PEAR
php -d phar.require_hash=0 go-pear.phar
pear upgrade pear
pear channel-discover pear.phpunit.de
pear channel-discover components.ez.no
pear channel-discover pear.symfony-project.com
pear install phpunit/PHPUnit

# download sphinx 1.10: http://sphinxsearch.com/files/sphinx-1.10-beta-win32.zip
# extract to c:/sphinx
# create c:/sphinx/log directory

# create local config file:
php scripts/install_settings.php

# add to config/local.php:
    'sphinx_conf_dir' => 'C:/sphinx',
    'sphinx_bin_dir' => 'C:/sphinx/bin',
    'sphinx_log_dir' => 'C:/sphinx/log',
    'sphinx_pid_dir' => 'C:/sphinx/log',
# (also, edit database connection settings)

# create empty database and user
php scripts/db_setup.php | mysql -u root -p

# install database tables and initial data directory
php scripts/install_tables.php
php scripts/install_dataroot.php

# create sphinx config file and initial index
php scripts/install_sphinx.php

# install test data:
php scripts/install_test_data.php

# make compressed CSS and JS files
php make.php

# start envaya server processes
php runserver.php

=========================================
Deploying releases to a production server
-----------------------------------------

This requires Ruby / Capistrano to be installed on your local computer.

# initial installation of all prerequisites and latest code on a server 
# (assumes ubuntu 10.04)
cap HOSTS=hostname deploy:basic_setup

# installs prerequisites and all Envaya services on a single server
cap HOSTS=hostname deploy:allinone_setup

# subsequently, updating server to latest code
cap HOSTS=hostname deploy

=============
Running tests
-------------

Envaya's user-interface tests are in the test/ directory. 
The tests assume that a web server is running on http://localhost with 
the Envaya code being tested, that no other Envaya services are running,
and that Firefox is installed on the local computer.

php test/TestSuite.php
